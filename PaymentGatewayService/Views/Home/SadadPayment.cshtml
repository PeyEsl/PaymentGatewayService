@model PaymentGatewayService.Models.ViewModels.PaymentRequestViewModel

@{
    ViewData["Title"] = "SadadPayment";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var message = ViewData["Message"] as string;
    var errorMessage = ViewData["ErrorMessage"] as string;
}

<h1>Internet payment gateway acceptor test</h1>

@if (!string.IsNullOrEmpty(message))
{
    <div class="text-center">
        <div class="alert alert-primary alert-dismissible">
            <button type="button" class="btn-close" data-bs-dismiss="alert" style="left: 0;"></button>
            @message
        </div>
    </div>
}

@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="text-center">
        <div class="alert alert-danger alert-dismissible">
            <button type="button" class="btn-close p" data-bs-dismiss="alert" style="left: 0;"></button>
            @errorMessage
        </div>
    </div>
}

<hr />
<form asp-action="SadadPayment" method="post">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <div class="row form-group mb-2">
        <div class="col-md-2">
            <label asp-for="MerchantId" class="control-label"></label>
        </div>
        <div class="col-md-10">
            <input asp-for="MerchantId" class="form-control" />
        </div>
        <span asp-validation-for="MerchantId" class="text-danger"></span>
    </div>
    <div class="row form-group mb-2">
        <div class="col-md-2">
            <label asp-for="TerminalId" class="control-label"></label>
        </div>
        <div class="col-md-10">
            <input asp-for="TerminalId" class="form-control" />
        </div>
        <span asp-validation-for="TerminalId" class="text-danger"></span>
    </div>
    <div class="row form-group mb-2">
        <div class="col-md-2">
            <label asp-for="MerchantKey" class="control-label"></label>
        </div>
        <div class="col-md-10">
            <input asp-for="MerchantKey" class="form-control" />
        </div>
        <span asp-validation-for="MerchantKey" class="text-danger"></span>
    </div>
    <div class="row form-group mb-2">
        <div class="col-md-2">
            <label asp-for="Amount" class="control-label"></label>
        </div>
        <div class="col-md-10">
            <input asp-for="Amount" type="number" class="form-control" />
        </div>
        <span asp-validation-for="Amount" class="text-danger"></span>
    </div>
    <div class="row form-group mb-2">
        <div class="col-md-2">
            <label asp-for="PurchasePage" class="control-label"></label>
        </div>
        <div class="col-md-10">
            <input asp-for="PurchasePage" class="form-control" />
        </div>
        <span asp-validation-for="PurchasePage" class="text-danger"></span>
    </div>
    <div class="form-group">
        <input type="submit" value="Send" class="btn btn-primary px-4" />
    </div>
</form>

<div class ="float-end">
    <a asp-action="Index">Back to Home</a>
</div>

@*@Html.LabelFor(t => t.EnableMultiplexing)
        @Html.CheckBoxFor(t => t.EnableMultiplexing)

        <div>
            <div class="row">
                <div class="col-md-4">
                    @Html.LabelFor(t => t.MultiplexingData.Type)
                    @Html.DropDownListFor(t => t.MultiplexingData.Type, new SelectListItem[] { new SelectListItem { Text = "درصد", Value = "Percentage" }, new SelectListItem { Text = "مبلغ", Value = "Amount" } })
                </div>
            </div>

            <div class="row">
                <div class="col-md-8">
                    @Html.Grid(Model.MultiplexingData.MultiplexingRows).Columns(columns =>
                       {
                           columns.Add(foo => foo.IbanNumber).Titled("ردیف حساب");
                           columns.Add(foo => foo.Value).Titled("مقدار");
                       }).
                </div>
            </div>
        </div>*@